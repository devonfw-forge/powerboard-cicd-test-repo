<?xml version="1.0" encoding="UTF-8"?>
<testExecutions version="1">
  <file path="C:\projects\devonfw-ide-scripts-2020.08.002\workspaces\powerboard_latest_api\CICD\powerboard-cicd-test-repo\src\app\teams\services\team.crud.service.spec.ts">
    <testCase name="TeamCrudService should be defined after module initialization" duration="196"/>
    <testCase name="TeamCrudService updateTeam() should update the team test 1 if team not found" duration="125"/>
    <testCase name="TeamCrudService updateTeam() should update the team test 2 if team found" duration="107"/>
    <testCase name="TeamCrudService getTeamInfoById() get all 5 kpis details along with sprint and status test 1 if team not present in db " duration="88"/>
    <testCase name="TeamCrudService getTeamInfoById() get all 5 kpis details along with sprint and status test 2 if team present in db and user is System Admin " duration="118"/>
    <testCase name="TeamCrudService getTeamInfoById() get all 5 kpis details along with sprint and status test 3 if team present in db and user is not a System Admin " duration="90"/>
    <testCase name="TeamCrudService getCenterByTeamId() should ftech all center in the team test 1 if team not found" duration="72"/>
    <testCase name="TeamCrudService getCenterByTeamId() should ftech all center in the team test 2 if team found" duration="114"/>
    <testCase name="TeamCrudService  getLinksForTeam() getLinksForTeam() should fetch the all the links of the team if priveleges includes view-links" duration="90"/>
    <testCase name="TeamCrudService  getLinksForTeam() getLinksForTeam() should fetch the all the links of the team if priveleges does not include view-links" duration="122"/>
    <testCase name="TeamCrudService  getMultimediaForTeam() it should return all the multimedia related to the team" duration="60"/>
  </file>
  <file path="C:\projects\devonfw-ide-scripts-2020.08.002\workspaces\powerboard_latest_api\CICD\powerboard-cicd-test-repo\src\app\teams\services\global.team.service.spec.ts">
    <testCase name="TeamCrudService should be defined after module initialization" duration="186"/>
    <testCase name="TeamCrudService getTeamsByCenterId() should update the team test 1 if no team found inside centerId" duration="95"/>
    <testCase name="TeamCrudService getTeamsByCenterId() should update the team test 2 if teams found inside centerId" duration="118"/>
    <testCase name="TeamCrudService uploadLogoForTeam()  should upload logo of a team" duration="86"/>
    <testCase name="TeamCrudService deleteLogoForTeam()  should delete logo of a team" duration="65"/>
    <testCase name="TeamCrudService deleteLogoForTeam()  should throw error if file not present in path" duration="78"/>
    <testCase name="TeamCrudService addTeam()  should throw error if team is already present in db" duration="101"/>
    <testCase name="TeamCrudService addTeam()  should add team if team is not already present in db" duration="94"/>
    <testCase name="TeamCrudService addTeam()  should create new team if team is not already present in db and even if logo is not there" duration="128"/>
    <testCase name="TeamCrudService deleteTeamById()  should delete team if team is present in db" duration="114"/>
    <testCase name="TeamCrudService deleteTeamById()  should throw error if team is not present in db" duration="166"/>
    <testCase name="TeamCrudService getAllTeams()  should return all the teams present in the db" duration="548"/>
    <testCase name="TeamCrudService getAllTeams()  should return a message when no team is found" duration="130"/>
    <testCase name="TeamCrudService viewTeamsInADC() should return adc Team list" duration="129"/>
    <testCase name="TeamCrudService findTeamById() should return the team if it is present in the db" duration="228"/>
    <testCase name="TeamCrudService updateTeamStatus() should update the status of team " duration="462"/>
  </file>
  <file path="C:\projects\devonfw-ide-scripts-2020.08.002\workspaces\powerboard_latest_api\CICD\powerboard-cicd-test-repo\src\app\core\user\services\user.service.spec.ts">
    <testCase name="UserService should be defined after module initialization" duration="77"/>
    <testCase name="UserService findUser() should return the User successfully if the user is present" duration="44"/>
    <testCase name="UserService registerUser registerUser() should register the User successfully if the user is not already present" duration="1148"/>
    <testCase name="UserService registerUser registerUser() should successfully register the existing user to other team" duration="49"/>
    <testCase name="UserService registerUser registerUser() should throw error message if the user is already present in that team" duration="62"/>
    <testCase name="UserService changePassword() changePassword() method should change the password of a user successfully if user is present" duration="3514"/>
    <testCase name="UserService changePassword() changePassword() method should throw error if user is not present" duration="18"/>
    <testCase name="UserService deleteGuestById() deleteGuestById() should delete guest user if it is present" duration="14"/>
    <testCase name="UserService deleteGuestById() deleteGuestById() should throw error if user is not present" duration="39"/>
  </file>
  <file path="C:\projects\devonfw-ide-scripts-2020.08.002\workspaces\powerboard_latest_api\CICD\powerboard-cicd-test-repo\src\app\core\auth\services\auth.service.spec.ts">
    <testCase name="AuthService should be defined after module initialization" duration="81"/>
    <testCase name="AuthService validateUser should return a defined user response if the user is present in the database" duration="729"/>
    <testCase name="AuthService validateUser should return undefined response if the user is not present in the database" duration="84"/>
    <testCase name="AuthService singIn should return accessToken if the user is present in the database" duration="141"/>
    <testCase name="AuthService login should return a JWT token and login response when a valid user is provided" duration="124"/>
    <testCase name="AuthService login should return a exception when an invalid user is provided" duration="72"/>
    <testCase name="AuthService loginGuest() should call the loginResponseForGuest() method and return login response for a guest user" duration="38"/>
    <testCase name="AuthService loginResponseForGuest() should return login response for a guest user" duration="94"/>
    <testCase name="AuthService getHomeDetailsForUserId should return a home detail response for the given user" duration="135"/>
    <testCase name="AuthService getPowerboard() should return the powerboard response inside login response for a user who visited any team earlier" duration="175"/>
    <testCase name="AuthService changePassword() should return the user with updated password" duration="154"/>
    <testCase name="AuthService systemAdminHome() should return home response for system admin" duration="61"/>
    <testCase name="AuthService teamMemberTeamAdminHome() should return a home detail response for the team member or team admin" duration="91"/>
    <testCase name="AuthService homeDetailsForTeamMemberAdmin() should return home detail for the team member or team admin" duration="50"/>
    <testCase name="AuthService getPrivileges() should return the priveleges if the user is system admin or guest " duration="254"/>
    <testCase name="AuthService getPrivileges() should return the priveleges if the user is team admin or team member associated with any team" duration="80"/>
    <testCase name="AuthService register should register a new user if not exists" duration="83"/>
  </file>
</testExecutions>